generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Provider {
  id                 Int            @id @default(autoincrement())
  name               String
  generalInformation String?        @map("general_information")
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")
  jurisdictions      Jurisdiction[]

  @@map("providers")
}

model Jurisdiction {
  id                 Int       @id @default(autoincrement())
  country            String
  region             String
  providerId         Int       @map("provider_id")
  generalInformation String?   @map("general_information")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  provider           Provider  @relation(fields: [providerId], references: [id])
  sections           Section[]

  @@map("jurisdictions")
}

model Section {
  id             Int           @id @default(autoincrement())
  code           String
  title          String
  description    String?
  jurisdictionId Int           @map("jurisdiction_id")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  billingCodes   BillingCode[]
  jurisdiction   Jurisdiction  @relation(fields: [jurisdictionId], references: [id])

  @@map("sections")
}

model BillingCode {
  id                    Int      @id @default(autoincrement())
  code                  String
  title                 String
  description           String?
  section_id            Int
  openai_embedding      String
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  code_class            String?
  anes                  String?
  details               String?
  general_practice_cost String?
  specialist_price      String?
  referred_price        String?
  non_referred_price    String?
  section               Section  @relation(fields: [section_id], references: [id])

  @@index([section_id])
  @@map("billing_codes")
}

model User {
  id                    Int       @id @default(autoincrement())
  email                 String    @unique
  password_hash         String
  roles                 Role[]
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  reset_token           String?
  reset_token_expires   DateTime?
  encrypted_city        String?
  encrypted_country     String?
  encrypted_postal_code String?
  encrypted_state       String?
  encrypted_street      String?
  encrypted_unit        String?

  @@map("users")
}

model AIPrompt {
  id             Int      @id @default(autoincrement())
  jurisdiction   String
  provider       String
  promptTemplate String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([jurisdiction, provider])
  @@map("ai_prompts")
}

enum Role {
  PATIENT
  PHYSICIAN
  ADMIN
}
